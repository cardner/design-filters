// Micro clearfix hack http://nicolasgallagher.com/micro-clearfix-hack/
// This clearfix hack can be used on the container element that has floated
// elements without adding new markup
@mixin clearfix {
    &:after,
    &:before {
        content: ' ';
        display: table;
    }

    &:after {
        clear: both;
    }

    .ie & {
        *zoom: 1;
    }
}
@mixin ellipsis ($max-width) {
    max-width: $max-width;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
}

// Vertically center an element in another with this mixin
@mixin vertical-center {
    transform: translateY(-50%);
    position: relative;
    top: 50%;
}
@mixin keyframes($animation-name) {
    @keyframes #{$animation-name}{
        @content;
    }
}
@mixin animation($str) {
    animation: $str;
}
@mixin retina {
    @media screen and (-webkit-min-device-pixel-ratio: 1.5), screen and (min-resolution: 1.5dppx){
        @content;
    }
}

// Source: https://css-tricks.com/snippets/css/retina-display-media-query/
@mixin low-res {
    @media screen and (-webkit-max-device-pixel-ratio: 1.25), screen and (max-resolution: 120dpi){
        @content;
    }
}

// Transition the given property using consistent duration and timing function.
@mixin transition($properties...) {
    transition-property: $properties;
    transition-duration: .2s;
    transition-timing-function: ease;
}
@mixin box {
    border-radius: $border-radius;
    padding: 1rem;
    margin-bottom: $large-margin-spacing;
    @include borders;

    &.disabled {
        background: transparentize($white, .35);
        color: transparentize($base-color, $disabled-opacity);
    }
}
@mixin content-block($padding: 30px 16px, $margin: null, $border-radius: $border-radius, $background: $white) {
    background-color: $background;
    padding: $padding;
    margin: $margin;
    border-radius: $border-radius;
}

// These are mixins for the new button styles
@mixin duo-icons {
    font-family: 'Duo Admin Icons' !important;
    font-style: normal !important;
    font-weight: normal !important;
    font-variant: normal !important;
    text-transform: none !important;
    speak: none;
    line-height: 1;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
}
@mixin box-shadow($shadows...) {
     @if length($shadows) == 0{
        $shadows: 0 0 0 1px $white, 0 0 0 2px currentColor;
    }
    box-shadow: $shadows;
}
@mixin transitions($effects...) {
     @if length($effects) == 0{
        $effects: all ease-in-out 150ms;
    }
    transition: $effects;
}
@mixin border-radius($radius: 4px) {
    border-radius: $radius;
}
@mixin borders($border-width: 1px, $border-type: solid, $border-color: $default-border-color) {
    border: $border-width $border-type $border-color;
}
@mixin border($direction, $border-width: 1px, $border-color: $default-border-color) {
    border-#{$direction}: $border-width solid $border-color;
}
@mixin no-box-shadow {
    box-shadow: none;
}
@mixin forward-arrow {
    content: $greaterThan;
    display: inline-block;
}
@mixin move-up($distance: -2px) {
    transform: translateY($distance);
}

// Margin Mixins
@mixin l--margin-reset($direction, $value: 0) {
    margin-#{$direction}: $value;
}

// Margin tops
@mixin l--margin-top-1-8 {
    margin-top: 1.85em;
}
@mixin l--margin-top-default {
    margin-top: $default-margin-spacing;
}

// Margin bottoms
@mixin l--margin-bottom-small {
    margin-bottom: $small-margin-spacing;
}
@mixin l--margin-bottom-default {
    margin-bottom: .8em;
}
@mixin l--margin-bottom-large {
    margin-bottom: $default-margin-spacing;
}

// Button reset
@mixin button-to-link-reset {
    border: none;
    padding: unset;
    height: unset;
    min-height: unset;
    background-color: unset;

    &:hover {
        color: inherit;
        background-color: unset;
        text-decoration: underline;
    }
}

// Grid specific
@mixin c--chart-doughnut($columns: 2, $rows: 1) {
    display: -ms-grid;
    display: grid;
    @if type_of($columns) == list {
        -ms-grid-columns: $columns;
        grid-template-columns: $columns;
    }

    else {
        // -ms-grid-columns: (1fr)[$columns];
        grid-template-columns: repeat($columns, 1fr);
    }
    @if $rows == auto {
        -ms-grid-rows: auto;
        grid-template-rows: auto;
    }

    else {
        // -ms-grid-rows: (1fr)[#{$rows}];
        grid-template-rows: repeat($rows, 1fr);
    }
    align-items: center;
}
@mixin l--grid-col1-fullheight($row-stop: 2) {
    -ms-grid-column: 1;
    -ms-grid-column-span: 1;
    grid-column: 1 / 1;
    -ms-grid-row: 1;
    -ms-grid-row-span: $row-stop;
    grid-row: 1 / #{$row-stop};
}
@mixin l--grid-col($columns: null) {
     @if $columns{
        // -ms-grid-columns: (1fr)[#{$columns}];
        grid-template-columns: repeat($columns, 1fr);
    }
    @else {
        -ms-grid-columns: auto;
        grid-template-columns: auto;
    }
}
@mixin l--grid-row($rows: null) {
     @if $rows{
        // -ms-grid-rows: (1fr)[#{$rows}];
        grid-template-rows: repeat($rows, 1fr);
    }
    @else {
        -ms-grid-rows: auto;
        grid-template-rows: auto;
    }
}
