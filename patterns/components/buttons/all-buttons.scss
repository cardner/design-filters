@import "../../global/variables";
@import "../../global/mixins";
@import "../../global/extends";

// TODO these are new name spaces and an expirement in variable inheritence
// Local button variables
// Button Colors
$color-active-button-shadow-start: rgba(30, 80, 150, .5);
$color-active-button-shadow-end: rgba(43, 73, 112, .5);
$color-hover-gradient-button-start: $color-gradient-blue-medium-start;
$color-hover-gradient-button-end: $color-gradient-blue-medium-end;

$color-button-border: $default-table-button-border;
$color-active-button-border: $color-active-button-shadow-end;
$color-button-text: $default-link-color;
$color-button-focus: $focus-button-border;
// Background Colors
$color-button-background-start: $color-gradient-grey-light-start;
$color-button-background-end: $color-gradient-grey-light-end;
// Button Sizes
$size-button-height: $size-40;
$size-button-line-height: $base-line-height;
$size-button-font: $base-font-size;
$size-button-border: 1px;
// Button spacing
$size-button-spacing-horizontal: $small-padding-spacing;
$size-button-spacing-vertical: $mid-padding-spacing;
// Button weights
$weight-button-base: $base-font-weight;
// Button Radius
$radius-button: $border-radius;

// Extend for button base styles
%button {
    border-radius: $radius-button;
    transition: background-color $transition-fast, border $transition-fast, box-shadow $transition-default;
    display: inline-block;
    font-size: $size-button-font;
    font-weight: $weight-button-base;
    text-decoration: none;
    line-height: $size-button-line-height;
    min-height: $size-button-height;
    border: $size-button-border solid $color-button-border;
    padding: $size-button-spacing-horizontal $size-button-spacing-vertical;
    color: $color-button-text;
    background-image: linear-gradient($color-button-background-start, $color-button-background-end);
    background-size: auto 100%;
    background-repeat: no-repeat;
    background-color: $hover-gradient-button-last;
    letter-spacing: .04em;
    outline: none;
    transition: background-size $transition-xfast;
}

a,
button {
    cursor: pointer;
    text-decoration: none;
}
/////////////// Buttons
///////// Primary Button


.button,
button {
    @extend %button;

    // Fix for IE11 and 10 (Edge works well):
    @media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {
        line-height: 1.25em;
    }

    &:hover,
    &.\--is-hover {
        background-size: auto 0;
        border-color: $hover-gradient-button-last;
        color: $color-button-focus;
        text-decoration: none;
        cursor: pointer;
    }

    &:focus,
    &.\--is-focus {
        @include button-focus($border-color: $color-button-focus);
    }

    &:active,
    &.\--is-active {
        box-shadow: inset 0 1px 3px 0 $color-active-button-shadow-start, inset 0 1px 3px 0 $color-active-button-shadow-end;

        border-color: transparent;
    }

    &.icon:after,
    &.icon:before {
        vertical-align: middle;
    }

    &.icon-only {
        padding-left: 12px;
        padding-right: 6px;
    }

    &.hidden,
    &.\--is-hidden {
        display: none;
    }

    // Hide the disabled tool tip if the button has been enabled
    i[role="tooltip"] {
        display: none;
    }

    &.a--btn-icon-clear {
        &:before {
            content: none;
            display: none;
        }
    }

}

//Add all imports here for different button types
@import 'primary';
@import 'disabled';
@import 'destructive';
@import 'download';
@import 'dropdowns';
@import 'bulk-selector';
@import 'navigational';
@import 'pagination';

.button-row {
    display: flex;
    align-items: center;
    flex-direction: row;
    flex-wrap: wrap;

    &.centered {
        justify-content: center;
    }

    &.right {
        justify-content: flex-end;
    }

    &.top {
        align-self: flex-start;
    }

    // Fix vertical alignment of primary buttons when the button-row is itself
    // inside a flex container.
    a.button.c--primary {
        align-self: flex-start;
    }

    // Prevent button text from wrapping, since we're letting the items wrap.
    // Style buttons and anchors with margin and piping
    > a,
    > button {
        white-space: nowrap;
        position: relative;
        margin: 0 16px;

        /* Between two adjacent non-buttons, put a separator */
        &:after {
            content: '';
            display: inline-block;
            margin-left: 15px;
            margin-right: -16px;
            top: 2px;
            background-color: $default-text-color;
            width: 1px;
            height: 14px;
        }

        // Drastic but resets all button and links that are not .c--primary to link style
        &:not(.c--primary):not(.a--dropdown-trigger) {
            color: $default-text-color;
            @include button-to-link-reset;
        }

        // clear left margin on these selectors
        &.c--primary {
            margin-left: 0;
        }

        // if there's only one item in the row kill right padding
        &:first-child:last-child {
            margin-right: 0;
        }

        // Remove the border right for these selectors / elements
        &:last-child,
        &.a--piping-none,
        &.c--primary,
        &.a--dropdown-trigger {
            &:after {
                content: '';
                @include unset($display-attr: content);
            }
        }

        &:last-child {
            margin-right: 0;
        }
    }

    // Make exception on margin for bulk selector buttons
    .bulk-selector-wrap .a--dropdown-trigger {
        margin-left: 0;
        margin-right: 0;
    }

    // When button row has an embedded form, don't wrap items inside it.
    // Also, remove outside margins.
    form.button-row {
        display: flex; // Needs to win over .header form
        flex-wrap: nowrap;

        a:first-child,
        button:first-child {
            margin-left: 0;
        }
        a:last-child,
        button:last-child {
            margin-right: 0;
        }
    }
}

.button--download {
    svg {
        width: $size-12;
        height: auto;
    }
}


// Button helper classes

.square,
.button--square {
    text-align: center;
    padding-left: $size-8;
    padding-right: $size-8;
    height: 100%;

    i {
        display: block;
        font-size: 2rem;
        height: 2rem;
        margin-bottom: .5rem;
    }
}

// Buttons that look like links
.c--button-link,
.button--link {
    @include button-to-link-reset;

    /* modifier for destructive button links TODO come back and fix inheritance with extends and buttons */

    &.c--destruction:before {
        content: $trashcan;
        display: inline-block;
        font-size: 1rem;
        font-weight: $bold-font-weight;
        padding-right: 6px;
        margin-top: -.2em;
    }
}

/* Button Resets */
.button--reset {
    border: none;
    padding: unset;
    height: unset;
    min-height: unset;
    background-color: unset;
    background: none;
    background-color: transparent;

    &:hover {
        color: inherit;
        background-color: transparent;
        text-decoration: underline;
    }
}

/* Button Size modifiers */
.button--large {
    min-height: $size-48;
    line-height: $medium-line-height;
    font-size: $large-font-size;
}

.button--small,
.button--tiny {
    min-height: $size-32;
    line-height: $small-line-height;
    font-size: $smaller-font-size;
}

.full-width,
.button--width-full {
    width: 100%;
}