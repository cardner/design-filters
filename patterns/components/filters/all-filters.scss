@import '../../global/variables';
@import '../../global/mixins';

$filter-container-width: 24rem;

@mixin button-tiny {
    min-height: $size-32;
    font-size: $smaller-font-size;
    line-height: $size-16;
    padding: $size-8 $size-16;
}

@mixin filter-item-hover {
    background-color: $filter-item-background-hover;
}

// Reset default styling of checkbox
input[type="checkbox"] {
    position: relative;
    appearance: none;
    -webkit-appearance: none;
    -moz-appearance: none;
    width: $size-16;
    height: $size-16;
    vertical-align: text-bottom;
    border-radius: 3px;
    @include borders($border-color: $default-input-border-color);

    &:focus {
        box-shadow: 0 0 0 2px $focus-radio-border;
    }

    &:checked {
        background-color: $primary-button-color;
        border-color: transparent;

        &::after {
            position: absolute;
            top: 2px;
            left: 2px;
            width: $size-16;
            height: $size-16;
            font-family: $icon-font-family;
            font-size: $smallest-font-size;
            vertical-align: middle;
            content: $confirm;
            color: $white;
        }
    }
}

input[type="radio"] {
    vertical-align: text-bottom;
    @include margin(right, $size-8);
    @include margin(left, -1px);

}

// Set container to grid and over lap elements so that container inherits correct height
.filter--container {
    display: grid;
    // grid-template-rows: 1fr;
    grid-template-columns: $filter-container-width 1fr;
}

// Set filter to be both off screen when off and underneath grid of the table container
.filter {
    // keep filter in track one of grid for width
    grid-column: 1/1;
    // set grid row stop to -1 to stretch full height of screen
    grid-row: 1;
    will-change: transform;
    transition: transform ease-in-out 225ms 10ms;
    background-color: $filter-panel-background;
    padding: $size-40 $size-32;

    &.--is-closed {
        transform: translateX(-$filter-container-width);
    }

    &.--is-open {
        transform: translateX(0);
    }
}

.filter--close {
    display: flex;
    width: 100%;
    flex-direction: row;
    justify-content: space-between;
    align-items: center;
    @include margin(left, $size-8);
    @include margin(bottom, $size-40);
    padding-right: 10px;

    &:hover {
        text-decoration: none;

        i {
            text-decoration: underline;
        }
    }
}

.filter--header,
.filter--group--toggle-container {
    @include margin-reset;
}

.filter--header {
    padding: $size-16 0 $size-16 $size-8;

}

.filter--item {
    display: block;
    padding: $size-16 0 $size-16 $size-8;
    @include border(bottom);

    &:hover {
        @include filter-item-hover;
    }

    input[type="checkbox"] {
        @include margin(right, $size-8);
    }

    &.--child {
        margin-left: 0;
        @include padding(left, $size-40);
        border-color: $default-border-color;
    }

    &:not(.--child) {
        &:last-child {
            border-bottom: none;
        }
        &:first-child {
            @include border(top);
        }
    }
}

.filter--group {
    @include border(bottom, $border-color: $dark-filter-border);
    @include margin-reset;
    margin-right: -$size-32;
}

.filter--group--toggle-container {
    overflow: hidden;
    transition: max-height $slow-ease;
    will-change: auto;

    &.--is-closed {
        max-height: 0;
    }

    &.--is-open {
        max-height: 200vh;
    }
}

.filter--group--toggle-trigger {
    cursor: pointer;
    width: 100%;

    &:hover {
        @include filter-item-hover;
    }

    &.--trigger-sub {
        &::after {
            float: none;
        }
    }
}

.filter--toggle-icon {
    display: inline-block;
    float: right;
    margin-right: $size-32;
    margin-top: $size-4;
    width: 10px;
    height: 10px;
    fill: $default-text-color;

    .--trigger-sub > & {
        margin-top: 7px;
    }

    .--is-open > & {
        .icon--plus-vert {
            transform: rotate(90deg);
        }
    }
}

.icon--plus-vert {
    will-change: transform;
    transition: transform ease-in-out 120ms 60ms;
    transform-origin: 50% 50%;
}

// 
// Table Styles
// 
.header--title {
    @include margin(top, $size-40);
    @include margin(bottom, $size-48);
}

.header--results {
    @include margin(top, 0);
    @include margin(bottom, $size-8);
}

.filter--table {
    // set to same row as filter nav
    grid-row: 1;
    // set to over lap columns with filter nav and extend to end of page
    grid-column: 1/end;
    will-change: transform;
    transition: transform ease-in-out 225ms 0ms;

    &.--is-closed {
        transform: translateX(0);
    }

    &.--is-open {
        transform: translateX(calc(#{$filter-container-width} + #{$size-32}));
    }
}

table {
    @include border(top, $border-color: $default-border);
    table-layout: fixed;
    width: 100%;
    white-space: normal;
}

%orderIndicator {
    content: url('../../images/triangle-icon.svg');
    position: relative;
    display: inline-block;
    top: -2px;
    @include margin(left, $size-8);
    transition: transform $slow-ease;
}

@mixin tableHeaderFormat {
    font-weight: $base-font-weight;
    font-size: $smaller-font-size;
}

th {
    @include tableHeaderFormat;
    position: sticky;
    top: 0;
    background-color: white;
    z-index: 999;

    &.--ascending {
        &::after {
            @extend %orderIndicator;
            transform: rotate(.5turn);
            top: 2px;
        }
    }

    &.--descending {
        &::after {
            @extend %orderIndicator;
        }
    }
}

tr {
    cursor: pointer;
    transition: background-color $slow-ease;

    &:hover,
    &.--is-active {
        background-color: $table-item-background-hover;
    }
}

td,
th {
    white-space: normal;
    overflow: hidden;
    text-overflow: ellipsis;
    padding: $size-16 $size-8;
    min-width: $size-16;
    @include border(bottom);
}

.table--td-width {
    // Set static width since UI doesn't ever change widths while scaling
    &--checkbox {
        width: 36px;
    }

    &--xsmall {
        width: 5%;
    }

    &--small {
        width: 10%;
    }

    &--medium {
        width: 15%;
    }

    &--large {
        width: 20%;
    }

    &--xlarge {
        width: 40%;
    }
}

.filter--table--actionrow {
    display: flex;
    flex-wrap: wrap;
    justify-content: space-between;
    @include border(top, $border-color: $dark-filter-border);
    padding: $size-16 0 $size-16 $size-8;
}

.filter--table--actionrow-section {
    display: flex;
    > * {
        flex: 1 1 auto;
        @include margin(right, $size-16);

        &:last-child {
            @include margin-reset;
        }
    }

    button {
        border-color: $default-table-button-border;
        color: $default-table-button;
        background: linear-gradient($white, $gradient-table-button);

        &:hover {
            background: linear-gradient($hover-gradient-button-top, $hover-gradient-button-bottom);
            border-color: $button-border-hover-color;
            svg {
                fill: $white;
            }
        }

        &.--is-active {
            background: linear-gradient($primary-button-gradient-start, $primary-button-gradient-end);
            border-color: $button-border-hover-color;

            svg {
                fill: $white;
            }
        }

        svg {
            fill: $default-table-button;
        }
    }

    @include query-screen-xsmall {
        @include padding(top, $size-16);
    }
}

.filter--pill--container {
    display: flex;
    padding-top: $size-8;
}

.filter--pill--item {
    display: flex;
    align-items: center;
    color: $default-text-color;
    padding: $size-8;
    font-size: $smaller-font-size;
    line-height: 1.165;
    margin-right: $size-8;
    @include borders($border-color: transparent);
    @include border-radius;

    &::after {
        content: '\e0fc';
        @include duo-icons;
        font-size: $smallest-font-size;
        display: inline;
        margin-left: $size-8;
    }

    &:hover {
        transition: all $fast-ease;
        text-decoration: none;
        @include borders($border-color: $dark-filter-border);
        background: $hover-pill-background;

    }
}

.filter--clear {
    // ugh this is happening to combat the size of the pills padding + a border
    padding: 9px;
    line-height: 1.165;
    font-size: $smaller-font-size;
}


.a--flex-full-width {
    flex-basis: 100%;
}

// Custom Time Range dropdown
    // Override default styling of select element
.filter--table--select {
    appearance: none;
    -webkit-appearance: none;
    -moz-appearance: none;
    min-width: 11.5rem;
}
// Override styles of select react component
    // Select input style overrides
.Select-control {
    display: flex;
    justify-content: space-between;
    align-items: center;
    flex-wrap: nowrap;
    border-color: $default-table-button-border;
    background: linear-gradient($white, $gradient-table-button);
    @include border-radius;
    line-height: $size-16;
    font-size: $small-font-size;
    min-height: $size-32;
    height: $size-32;
    cursor: pointer;

    &:hover {
        background: linear-gradient($hover-gradient-select-top, $hover-gradient-select-bottom);
        border-color: $default-table-button-border;
    }
}
.Select-placeholder {
    line-height: $size-16;
    font-size: $small-font-size;
    color: $default-text-color;
    padding: $size-8;
    position: relative;

}
.Select-input {
    position: absolute;
    z-index: 0;
    top: 0;
    left: 0;
}
.Select-arrow {
    border-width: $size-4 $size-4 2.5px;
    border-color: $default-text-color transparent transparent;
}
    // Dropdown list styles
.Select-menu-outer {
    max-height: initial;
    z-index: 1000;
    margin-top: $size-4;
    border-color: $default-table-button-border;
    box-shadow: 0 $size-4 $size-4 $color-dropdown-box-shadow;
}
.Select-menu {
    // increase max height to stop scroll bar
    max-height: 90vh;
}
.Select-option {
    @include border(bottom);
    padding: $size-16;
    color: $default-text-color;

    &.is-focused,
    &:hover {
        background-color: $table-item-background-hover;
        font-weight: $bold-font-weight;
    }
    
    &:last-child {
        @include unset(border);
    }
}

// Custom Time Range Modal

.table--select--all {
    @include margin(left, $size-8);
}

.search--tiny {
    position: relative;

    input[type="search"] {
        box-sizing: border-box;
        @include button-tiny;
        font-size: $small-font-size;
        height: $size-32;
        @include padding(left, $size-40);

        &:focus,
        &:hover {
            @include button-focus;
            border-color: $focus-button-border;
        }
    }

    &:before {
        content: url('../../images/search-icon.svg');
        position: absolute;
        display: block;
        top: $size-8;
        left: $size-16;
        width: $size-16;
        height: $size-16;
    }
}

.filter--row--load-more {
    text-align: center;

    &:hover {
        background-color: unset;
    }

    td {
        padding: $size-24 $size-8;
    }
}

// Take pagination out of the flow and align to the left while letting the button center
.filter--pagination {
    float: left;
    padding-top: $size-8;
}

@include query-screen-xsmall {
    /* Force table to not be like tables anymore */
    table,
    thead,
    tbody,
    th,
    td,
    tr {
        display: block;
    }

    /* Hide table headers (but not display: none;, for accessibility) */
    thead tr {
        position: absolute;
        top: -9999px;
        left: -9999px;
    }

    td {
        /* Behave  like a "row" */
        position: relative;
        padding-left: 30%;
        border: none;

        &::before {
            /* Now like a table header */
            content: attr(data-th);
            @include tableHeaderFormat;
            position: absolute;
            /* Top/left values mimic padding */
            top: $size-16;
            left: $size-8;
            width: 25%;
            @include padding(right, $size-8);
            white-space: nowrap;
        }

        &:last-child {
            @include border(bottom);
        }
    }

};

// Button Overrides TODO: Talk to Nako about if these will be more widely available outside of the tables

.button--tiny {
    @include button-tiny;
    height: $size-32;
}

.button--filter-toggle {
    svg {
        width: $size-16;
        height: auto;

        circle {
            transition: transform ease-in-out 500ms 250ms;
        }

        .filter--icon {            
            &--circle-1 {
                transform: translateX(55%);
            }
            &--circle-2 {
                transform: translateX(20%);
            }
            &--circle-3 {
                transform: translateX(65%);
            }
        }
    }

    &.--is-active {
        svg {
            .filter--icon {
                &--circle-1 {
                    transform: translateX(20%);
                }
                &--circle-2 {
                    transform: translateX(75%);
                }
                &--circle-3 {
                    transform: translateX(35%);
                }
            }
        }
    }
}

.button--download {
    svg {
        width: $size-12;
        height: auto;
    }
}

// Proposed new modal structure/style
@mixin modal--base {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: 800;
    // this actually sets the top of the content modal positioning
    padding-top: 30vh;
    overflow-y: scroll;
    will-change: opacity;
    transition: opacity $slow-ease;

    &.--is-hidden {
        opacity: 0;
        visibility: hidden;
    }

    &.--is-visible {
        opacity: 1;
    }

    &::before {
        content: '';
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(0, 0, 0, .2);
        z-index: 700;
    }
}
@mixin modal--content {
    background: $white;
    width: 60%;
    min-width: 720px;
    padding: $size-40;
    margin: 0 auto;
    position: relative;
    z-index: 900;
}
.modal {
    &--content {
        @include modal--content;
        
        &-2col {
            display: -ms-grid;
            display: grid;
            grid-template-columns: 50% 50%;
        }
    }
    &--date-picker {
        @include modal--base;
    }
    &--header {
        // set the header to span the whole modal
        grid-column: 1/end;
        // display flex to position copy and close button
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding-bottom: $size-8;
        @include border(bottom, $border-color:$dark-filter-border);
    }
}

// Custom Time Range override
.DayPicker {
    &-Day {
        @include borders;
        padding: $size-8 $size-12;
    }
}