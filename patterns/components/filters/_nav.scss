@import '../../global/variables';
@import '../../global/mixins';

@mixin filter-item-hover {
    background-color: $table-item-background-hover;
}

// Set filter to be both off screen when off and underneath grid of the table container
.filter {
    position: absolute;
    top: 0;
    @supports (display: grid) {
        // unset non grid support properties
        position: initial;
        top: initial; // keep filter in track one of grid for width
        grid-column: 1/1; // set grid row stop to -1 to stretch full height of screen
        grid-row: 1;
    }
    will-change: transform;
    transition: transform ease-in-out 225ms 10ms;
    background-color: $filter-panel-background;
    padding: $size-40 $size-32;
    &.\--is-closed {
        transform: translateX(-$filter-container-width);
    }
    &.\--is-open {
        transform: translateX(0);
    }
}

.filter--close {
    display: flex;
    width: 100%;
    flex-direction: row;
    justify-content: space-between;
    align-items: center;
    @include margin(left, $size-8);
    @include margin(bottom, $size-40);
    padding-right: 10px;
    span {
        // this sets box model to the size of svg
        line-height: .8;
        transition: background-color $fast-ease, margin $fast-ease, padding $fast-ease;
        @include border-radius;
    }
    &:hover {
        text-decoration: none;
        box-shadow: none;
        span {
            padding: $size-8; // this is to prevent visual shifting on hover
            margin-right: -$size-8;
            margin-top: -$size-8;
            margin-bottom: -$size-8;
            background-color: $hover-filter-panel-close;
        }
    }
    &:active {
        box-shadow: none;
    }
}

.filter--header,
.filter--group--toggle-container {
    @include margin-reset;
}

.filter--header {
    padding: $size-16 0 $size-16 $size-8;
}

.filter--item {
    display: block;
    padding: $size-16 0 $size-16 $size-8;
    @include border(bottom);
    &:hover {
        @include filter-item-hover;
    }
    input[type="checkbox"] {
        @include margin(right, $size-8);
    }
    &.--child {
        margin-left: 0;
        @include padding(left, $size-40);
        border-color: $default-border-color;
    }
    &:not(.--child) {
        &:last-child {
            border-bottom: none;
        }
        &:first-child {
            @include border(top);
        }
    }
}

.filter--group {
    @include border(bottom, $border-color: $dark-filter-border);
    @include margin-reset;
    margin-right: -$size-32;
}

.filter--group--toggle-container {
    overflow: hidden;
    transition: max-height $slow-ease;
    will-change: auto;
    &.\--is-closed {
        max-height: 0;
    }
    &.\--is-open {
        max-height: 200vh;
    }
}

.filter--group--toggle-trigger {
    cursor: pointer;
    width: 100%;
    &:hover {
        @include filter-item-hover;
    }
    &:focus {
        border-bottom: 1px dotted currentColor;
    }
    &.--trigger-sub {
        &::after {
            float: none;
        }
    }
}

.filter--toggle-icon {
    display: inline-block;
    float: right;
    margin-right: $size-32;
    margin-top: $size-4;
    width: 10px;
    height: 10px;
    fill: $default-text-color;
    .\--trigger-sub>& {
        margin-top: 7px;
    }
    .\--is-open>& {
        .icon--plus-vert {
            transform: rotate(90deg);
        }
    }
}

.icon--plus-vert {
    will-change: transform;
    transition: transform ease-in-out 120ms 60ms;
    transform-origin: 50% 50%;
}

.a--flex-full-width {
    flex-basis: 100%;
}

.button--filter-toggle {
    margin-right: $size-8;
    svg {
        width: $size-16;
        height: auto;
        circle {
            transition: transform ease-in-out 500ms 250ms;
        }
        .filter--icon {
            &--circle-1 {
                transform: translateX(55%);
            }
            &--circle-2 {
                transform: translateX(20%);
            }
            &--circle-3 {
                transform: translateX(65%);
            }
        }
    }
    &.\--is-active {
        svg {
            .filter--icon {
                &--circle-1 {
                    transform: translateX(20%);
                }
                &--circle-2 {
                    transform: translateX(75%);
                }
                &--circle-3 {
                    transform: translateX(35%);
                }
            }
        }
    }
}